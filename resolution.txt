Zamieszczam paczkę ze zmodyfikowanymi plikami.
Tam gdzie dodałem modyfikacjio dodałem komentarz.

// Dawid was here

1. Dodaj nawigację z trzema elementami. Za pomocą SCSS spraw, aby trzeci
element był w innym kolorze niż dwa pozostałe.

 Nie byłem pewien czy mam nodać nawigację w poprzez admin panel czy modyfikować istniejące pliki.
Postanowiłem stargetować istniejący html.

 Zmodyfikowałem plik _header.scss 
  dodając pod istniejącym selektorem:

%shb-nav-item

%shb-nav-item:nth-of-type(3) {
	a {
		background-color:crimson;
	}
}





2. Po kliknięciu w menu na “Kategoria 1” powinieneś zostać przeniesiony na listę z
produktami należącymi do tej kategorii. Po lewej stronie powinien wyświetlać Ci
się sidebar z listą wszystkich kategorii. Za pomocą SCSS zamień je miejscami,
tak aby “Kategoria 1” wyświetlała się jako trzecia, “Kategoria 2” wyświetlała się
jako pierwsza, a “Kategoria 3” wyświetlała się jako druga.

 Klasana jest brana z pliku themes.scss.
 Pod klasą .shb-product-list-2 dodałem regułę zmieniającą kolejność:

 .shb-product-list-2 {
  .shb-categories-list-inline {
    .categories { 
		
	display: flex;
		
	  li:nth-of-type(1) {
		order: 2;
		  margin-left: 16px;
	  }	
		
	  li:nth-of-type(2) {
		order: 0;
	  }	
		
	  li:nth-of-type(3) {
		order: 1;
	  }	
		
	}
  }
}

3. Wstaw na stronę główną (szablon home.tpl), pod banerem głównym filmik z
Youtube, ale z wyłączonym dźwiękiem, odtwarzającym się samoczynnie, z
ukrytymi wszystkimi przyciskami. Filmik powinien się też zapętlać.

Dodałem w home.tpl pod banerem embeeded url z youtube dodając parametry zgodnie z dokumentacją API:
<!-- Dawid was here /start -->
<div id="youtube-video-dawid">
	<iframe width="560" height="315" src="https://www.youtube.com/embed/ZEBGCOCxLgA?&autoplay=1&mute=1&loop=1&controls=0" frameborder="0" allow="accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture" allowfullscreen></iframe>
</div>
<!-- Dawid was here /end -->


4. Na stronie głównej (home.tpl) na dole strony dodaj sekcję w której umieścisz 8
zdjęć, po 3 w pierwszym i drugim rzędzie, a poniżej w trzecim rzędzie 2 zdjęcia.
Możesz do tego zadania wykorzystać framework Bulma lub własne style.


added code at the bottom:
<!-- END Dawid was here -->
<section id="pictures">
	<div class="columns">

			<img class="column is-one-third" src="https://images.unsplash.com/photo-1545075885-39e65fc25e12?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=634&q=80" alt="gallery picture">
			<img class="column is-one-third" src="https://images.unsplash.com/photo-1566191142644-9b5c6e45f344?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=500&q=60" alt="gallery picture">
			<img class="column is-one-third"  src="https://images.unsplash.com/photo-1566261652393-56860041d70f?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=500&q=60" alt="gallery picture">

			<img class="column is-one-third"  src="https://images.unsplash.com/photo-1566287045674-0372c7a0c303?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=500&q=60" alt="gallery picture">
			<img class="column is-one-third" src="https://images.unsplash.com/photo-1566252014492-85744a081c2d?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=500&q=60" alt="gallery picture">
			<img class="column is-one-third" src="https://images.unsplash.com/photo-1566242635502-d51649e6c8df?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=500&q=60" alt="gallery picture">

			<img class="column is-half" src="https://images.unsplash.com/photo-1566242635518-5aecc3db686f?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=500&q=60" alt="gallery picture">
			<img class="column is-half" src="https://images.unsplash.com/photo-1566240069755-96c228dd911d?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=500&q=60" alt="gallery picture">
	</div>
</section>
<!-- END Dawid was here /end-->


 5. Stwórz trzeci poziom menu (wyłącznie w rozdzielczości na desktop).
Rekomendujemy wykorzystanie smarty, ale można też wykorzystać html i js/css.

W pliku main_nav.tpl dodałem kolejną navigację do tego zadania:

  <ul class="shb-list-inline">
    {foreach from=$menulists->main_menu->links item="menu"}
      <li class="shb-nav-item{if ($template == 'category') && $menu->url|strpos:$category->url !== false} active
      {elseif $template == 'collection' && ($menu->url|strpos:$collection->url !== false)} active
      {elseif $template == 'list_categories' && ($menu->url|strpos:'/all' != false || $menu->url|strpos:'/wszystkie' != false)} active
      {elseif isset($page) and $page->url == $menu->url} active
      {elseif isset($product) and $product_url == $menu->url} active
      {elseif $template == 'home'}{if $menu->url == '/'} active{/if}{/if}">
        <a href="{$menu->url}">{$menu->title}</a>
        {if $menulists->{$menu->title|lower|replace:$langletters:$letters}->links|count > 0}
          <ul class="shb-submenu shb-list-block">
            {foreach $menulists->{$menu->title|lower|replace:$langletters:$letters}->links item="submenu"}
              <li><a href="{$submenu->url}">{$submenu->title} </a> </li>
            {/foreach}
          </ul>
        {/if}
      </li>
    {/foreach}
  </ul>

Zagnieździłem sumenu po raz drugi dla każdego li

Następnie w pliku _header.scss nadpisałem wygląd navigacji:
//Dawid was here
.shb-list-inline--modify {
	background-color: #fff;
	color: black;
	
	%shb-nav-item {
	  a {
		  color: #000;
		  background-color: #fff;
	  }

	  .shb-submenu {
		  background-color: #fff;
		li {
		  padding: 3px 8px;


			ul.shb-submenu__nested{
				background-color: #fff;
				position: absolute;
				left: calc(100% + 2px);
				top: 0;
				display: none;
			}

			&:hover ul.shb-submenu__nested {
				display: block;
			}



		  a {
			  background-color: #fff;
			&:hover {
			  text-decoration: underline;
			}
		  }

		  &.active {
		  }
		}
	  }

	  &:hover {
		.shb-submenu {

		}
	  }
	}	
	
}


6. Stwórz element, który będzie wyświetlał się na stronie głównej po 5s od
załadowania strony, tylko jeden raz. Niech element ten wyświetli komunikat
“Hello World”. Całość powinna być wypozycjonowana absolutnie względem całej

strony. Podczas wyświetlania się tego elementu, żaden inny element na stronie
nie może być klikalny. Element powinien zniknąć po 5 sekundach, oraz nie
powinien pojawić się przy kolejnym wejściu na stronę.



html dodałem do base.tpl (zakładam że komunikat ma się wyświetlać dla wszystkich podstron nie tylko home)

<!-- Dawid was here -->
<section id="ls-issues-alert">
	<div class="issue-alert-prompt">
		<div class= "head">
			<ul class="head__options">
				<li class="icon icon--close">
				</li>
			</ul>
			<p class="head__whoami">LocalStorage error</p>
		</div>
		<div class="text-body">
			<h5 class="text-body__title">
				Detected issue with LocalStorage.
			</h5>
			<p class="text-body__details">
				Your localStorage is eaither blocked or full.
				Tasks added to the app will be lost after browser is closed.
			</p>

			<a href="https://mid.as/kb/00103/enable-disable-or-clear-web-storage-cache" class="text-body__help">
				Click here for more information
			</a>


		</div>   
	</div>
</section>
<!-- Dawid was here /end -->


Dodałem style do _header.scss
//Dawid was here
.issue-alert{
	z-index: 5;
	position: absolute;
	width: 100%;
	height: 100%;
	
	.issue-alert-prompt {
		position: absolute;
		right: 50%;
		top: 500px;
		width: 500px;
		

		.head {
			color: #fff;
			background-color: #45443f;
			background: linear-gradient(#616056, #403f3a);
			padding: 0.3rem;
			border-radius: 5px 5px 0 0;

			&__options {
			  list-style: none;
			  display: inline-block;
			  margin: 0 0.5rem 0 0.2rem;

			  .icon {
				vertical-align: middle;
				width: 1.2rem;
				height: 1.2rem;
				border-radius: 50px;
				display: inline-block;
				background-color: #807e7c;
				background: linear-gradient(#807e7c, #616056);
				text-align: center;
				color: #45443f;
				font-weight: bold;
				font-size: 1.1rem;

				&--close {
				  background-color: #dd5c24;
				  background: linear-gradient(#e2885e, #dd5c24);
				  text-align: center;
				}
			  }
			}

			&__whoami {
			  display: inline-block;
			  vertical-align: middle;
			  font-weight: bold;
			}
		  }

		  .text-body{
			  text-align: center;
			  background-color: #f2f1f0;
			  border: 1px solid #45443f;
			  padding-bottom: 2rem;

			  &__title{
				  color: #4c4c4c;
				  margin: 0;
				  margin-top: 1rem;
				  font-size: 1.5rem;
			  }

			  &__details {
				color: #4c4c4c;
				margin-top: 1rem;
			  }

			  &__help{
				display: inline-block;
				margin-top: 1rem;
			  }
		  }

	}
}

Kilkanie zablokowałem dodając absolute na elemencie potomnym samego prompta i rozciągając go na całą stronę.
Alternatywnie można było by utworzyć dodatkowego diva screen I nadać mu opacity: 0.4 by uzyskać efekt maski często spotykany na stronie.

Funkcje odpowiedzialną za usunięcie popupu dodałem w main.js:

//Dawid was here
function hidePromptOnLoad(){
	window.setTimeout(function(){
		const promptSection = document.getElementById('issue-alert');
		promptSection.style.display = "none";
	}, 5000)

}

document.addEventListener('DOMContentLoaded', hidePromptOnLoad , false);

Dodać localStorage
